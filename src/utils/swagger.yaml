openapi: 3.0.3
info:
  title: 2팀-How Do I Look
  version: 1.0.0
  description: 이 프로젝트는 코드잇 Node.js 스프린트의 초급 팀 프로젝트 진행한 프로젝트입니다.
servers:
  - url: "http://localhost:3000"

tags:
  - name: Style
    description: 상의, 하의, 신발, 악세사리 등 아웃핏들을 모은 스타일 게시글
  - name: Curation
    description: 스타일 게시글에 대한 평가
  - name: Comment
    description: 큐레이션에 대한 스타일 작성자의 댓글

paths:
  /styles:
    get:
      tags:
        - Style
      summary: 스타일 목록 조회
      description: 목록을 조회해요
      parameters:
        - name: page
          in: query
          description: 현재 페이지
          required: false
          schema:
            type: string
            default: 1
        - name: pageSize
          in: query
          description: 한 페이지당 게시글 수
          required: false
          schema:
            type: string
            default: 5
        - name: sortBy
          in: query
          description: 정렬 기준
          required: false
          schema:
            type: string
            default: latest
            enum:
              - latest
              - mostViewed
              - mostCurated
        - name: searchBy
          in: query
          description: 검색 기준
          required: false
          schema:
            type: string
            default: title
            enum:
              - nickname
              - title
              - content
              - tag
        - name: keyword
          in: query
          description: 검색어
          required: false
          schema:
            type: string
            default: ""
        - name: tag
          in: query
          description: 태그
          required: false
          schema:
            type: string
            default: ""

      responses:
        "200":
          description: OK

          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Style"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "잘못된 요청입니다."

    post:
      tags:
        - Style
      summary: 새로운 스타일을 등록
      description: 사진(여러장 가능)을 업로드하고 최대 3개의 태그와 제목, 닉네임, 스타일 구성, 스타일 설명, 비밀번호를 입력하여 스타일을 등록합니다.
      requestBody:
        description: 유저가 사진(여러장 가능)을 업로드하고 태그(최대 3개), 제목, 닉네임, 스타일 구성, 스타일 설명, 비밀번호를 입력하여 스타일을 등록합니다. <br>스타일 구성의 종류에는 **상의, 하의, 아우터, 원피스, 신발, 가방, 패션잡화**가 있으며, 각 구성마다 의상명, 브랜드명, 가격을 입력할 수 있습니다
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStyle"
        required: true

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Style"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "잘못된 요청입니다."

  /styles/{styleId}:
    put:
      tags:
        - Style
      summary: 스타일 수정
      description: 비밀번호를 입력하여 스타일 등록 시 입력했던 비밀번호와 일치할 경우 스타일 수정이 가능합니다.
      parameters:
        - name: styleId
          in: path
          description: 수정하고자 하는 스타일 아이디
          required: true
          schema:
            type: string
      requestBody:
        description: 수정하고자 하는 내용과 비밀번호
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStyle"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Style"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "잘못된 요청입니다."
    delete:
      tags:
        - Style
      summary: 스타일 삭제
      description: 비밀번호를 입력하여 스타일 등록 시 입력했던 비밀번호와 일치할 경우 스타일 삭제가 가능합니다.
      parameters:
        - name: styleId
          in: path
          description: 수정하고자 하는 스타일 아이디
          required: true
          schema:
            type: string
      requestBody:
        description: 비밀번호
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: review123
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 스타일 삭제 성공
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "잘못된 요청입니다."
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "비밀번호가 틀렸습니다"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "존재하지 않습니다"
    get:
      tags:
        - Style
      summary: 스타일 상세 조회
      description: 해당 id의 스타일을 상세하게 조회해요
      parameters:
        - name: styleId
          in: path
          description: 조회하고자 하는 스타일의 아이디
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Style"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "잘못된 요청입니다."

components:
  schemas:
    Style:
      type: object
      properties:
        id:
          type: string
          description: "고유 ID (UUID)"
          example: "b13c2e6f-dc44-4b97-bad7-cf602a90322b"
        nickname:
          type: string
          description: 작성자의 닉네임
          example: "침착맨"
        title:
          type: string
          description: 스타일의 제목
          example: "chill한 스타일"
        content:
          type: string
          description: 스타일에 대한 내용
          example: "침착하게 입어봤습니다. 어떤가요?"
        password:
          type: string
          description: 숫자, 알파벳
          example: review123
        viewCount:
          type: number
          format: integer
          description: 조회수
          example: 3
        curationCount:
          type: number
          format: integer
          description: 해당 style 게시글에 달린 큐레이션 수
          example: 3
        createdAt:
          type: string
          format: date-time
          description: 생성된 날짜 및 시간
          example: "2025-02-26T12:00:00Z"
        categories:
          type: object
          description: 상품 가격
          properties:
            top:
              type: object
              properties:
                name:
                  type: string
                  description: 상의 이름
                  example: "티셔츠"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드A"
                price:
                  type: number
                  format: float
                  description: 상의 가격
                  example: 29.99
            bottom:
              type: object
              properties:
                name:
                  type: string
                  description: 하의 이름
                  example: "청바지"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드B"
                price:
                  type: number
                  format: float
                  description: 하의 가격
                  example: 49.99
            outer:
              type: object
              properties:
                name:
                  type: string
                  description: 외투 이름
                  example: "자켓"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드C"
                price:
                  type: number
                  format: float
                  description: 외투 가격
                  example: 79.99
            dress:
              type: object
              properties:
                name:
                  type: string
                  description: 드레스 이름
                  example: "블랙 드레스"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드D"
                price:
                  type: number
                  format: float
                  description: 드레스 가격
                  example: 99.99
            bag:
              type: object
              properties:
                name:
                  type: string
                  description: 가방 이름
                  example: "백팩"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드E"
                price:
                  type: number
                  format: float
                  description: 가방 가격
                  example: 39.99
            shoes:
              type: object
              properties:
                name:
                  type: string
                  description: 신발 이름
                  example: "운동화"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드F"
                price:
                  type: number
                  format: float
                  description: 신발 가격
                  example: 59.99
            accessory:
              type: object
              properties:
                name:
                  type: string
                  description: 액세서리 이름
                  example: "목걸이"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드G"
                price:
                  type: number
                  format: float
                  description: 액세서리 가격
                  example: 19.99
        tags:
          type: array
          items:
            type: string
          description: 스타일 관련 태그
          example: ["편안한", "여름"]
        imageUrls:
          type: array
          items:
            type: string
            format: uri
          description: 스타일 이미지를 나타내는 URL 리스트
          example:
            ["http://example.com/image1.jpg", "http://example.com/image2.jpg"]

    CreateStyle:
      type: object
      properties:
        name:
          type: string
          description: 상품 이름
          example: "블루 티셔츠"
        description:
          type: string
          description: 상품 설명
          example: "편안한 착용감을 제공하는 블루 티셔츠"
        password:
          type: string
          description: 숫자, 알파벳
          example: review123
        tags:
          type: array
          items:
            type: string
          description: "상품의 태그 (기본값: ETC)"
          example: ["ETC"]
        categories:
          type: object
          description: 상품 가격
          properties:
            top:
              type: object
              properties:
                name:
                  type: string
                  description: 상의 이름
                  example: "티셔츠"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드A"
                price:
                  type: number
                  format: float
                  description: 상의 가격
                  example: 29.99
            bottom:
              type: object
              properties:
                name:
                  type: string
                  description: 하의 이름
                  example: "청바지"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드B"
                price:
                  type: number
                  format: float
                  description: 하의 가격
                  example: 49.99
            outer:
              type: object
              properties:
                name:
                  type: string
                  description: 외투 이름
                  example: "자켓"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드C"
                price:
                  type: number
                  format: float
                  description: 외투 가격
                  example: 79.99
            dress:
              type: object
              properties:
                name:
                  type: string
                  description: 드레스 이름
                  example: "블랙 드레스"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드D"
                price:
                  type: number
                  format: float
                  description: 드레스 가격
                  example: 99.99
            bag:
              type: object
              properties:
                name:
                  type: string
                  description: 가방 이름
                  example: "백팩"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드E"
                price:
                  type: number
                  format: float
                  description: 가방 가격
                  example: 39.99
            shoes:
              type: object
              properties:
                name:
                  type: string
                  description: 신발 이름
                  example: "운동화"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드F"
                price:
                  type: number
                  format: float
                  description: 신발 가격
                  example: 59.99
            accessory:
              type: object
              properties:
                name:
                  type: string
                  description: 액세서리 이름
                  example: "목걸이"
                brand:
                  type: string
                  description: 브랜드명
                  example: "브랜드G"
                price:
                  type: number
                  format: float
                  description: 액세서리 가격
                  example: 19.99
        imageUrls:
          type: array
          items:
            type: string
            format: uri
          description: 스타일 이미지를 나타내는 URL 리스트
          example:
            ["http://example.com/image1.jpg", "http://example.com/image2.jpg"]
